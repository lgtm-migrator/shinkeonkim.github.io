<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://www.singun11.wtf/</id><title>kokoa</title><subtitle>프로그래머스(그렙)에서 SW Engineer로 근무하고 있는 koa라고 합니다.</subtitle> <updated>2022-10-30T16:30:24+09:00</updated> <author> <name>shinkeonkim</name> <uri>https://www.singun11.wtf/</uri> </author><link rel="self" type="application/atom+xml" href="https://www.singun11.wtf/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://www.singun11.wtf/"/> <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator> <rights> © 2022 shinkeonkim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>2년차 주니어 개발자 / 휴학생 / 예비 군인의 미리 쓰는 2022년 회고록</title><link href="https://www.singun11.wtf/posts/goodbye-2022/" rel="alternate" type="text/html" title="2년차 주니어 개발자 / 휴학생 / 예비 군인의 미리 쓰는 2022년 회고록" /><published>2022-10-30T16:05:00+09:00</published> <updated>2022-10-30T16:30:04+09:00</updated> <id>https://www.singun11.wtf/posts/goodbye-2022/</id> <content src="https://www.singun11.wtf/posts/goodbye-2022/" /> <author> <name>shinkeonkim</name> </author> <category term="회고록" /> <summary> 2년차 주니어 개발자, 휴학생, 예비 군인 등 많은 수식어가 생긴 올해의 회고록은 일찍 써보려 한다. 서론 이 회고록은 왜 일찍 쓰여지는 걸까? 작년 회고록 에서도 언급되었지만, 군대를 가야 합니다. 최대한 올해가 가기전에 입대를 하기 위해, 두 번이나 SW 개발병에 지원을 했었지만, 첫번째는 면접에서 탈락, 두번째는 서류에서 탈락했습니다. 아무래도 SW 개발병 점수에 포함되는 학력 점수가 영향을 많이 줬지 않았을까 생각하고 있습니다… (휴학을 너무 빨리 했습니다 ㅠ) 아무튼, SW 개발병으로 개발을 하면서 군대 생활을 하기엔 힘들겠다 판단했고, 기술행정병으로 지원했고 정보체계운용/정비 특기로 11월 28일에 입대합니다. 11월 언저리 넘어서야 올해 회고록 좀 써볼까 해왔었지... </summary> </entry> <entry><title>[BOJ] 16942 문자열 접기</title><link href="https://www.singun11.wtf/posts/boj-16942/" rel="alternate" type="text/html" title="[BOJ] 16942 문자열 접기" /><published>2022-05-05T12:16:14+09:00</published> <updated>2022-05-05T12:16:14+09:00</updated> <id>https://www.singun11.wtf/posts/boj-16942/</id> <content src="https://www.singun11.wtf/posts/boj-16942/" /> <author> <name>shinkeonkim</name> </author> <category term="BOJ" /> <summary> 문제 요약 및 풀이 16942번: 문자열 접기 주어지는 문자열을 접어서, 같은 문자열로만 이루어지는 문자열을 만들어내면 된다. 문제에서 주어지는 예시를 쭉 보다보면, 한가지 사항을 발견할 수 있다. 만들어내는 문자열의 각 문자의 원래 문자열에서의 위치는 서로 홀수만큼 차이가 난다. (사이에 있는 숫자 갯수를 말하는 것이 아닌, 위치의 차이다.) 따라서, 최대한 같은 문자를, 위치가 홀수만큼 차이가 나는 문자들을 선택하면 된다. 물론 하나하나 따져가면 시간초과가 뜰테니.. DP로 풀어나갔다. 풀이 코드 #include &amp;lt;bits/stdc++.h&amp;gt; #define for1(s,n) for(int i = s; i &amp;lt; n; i++) #define for1j(s,n) for(int... </summary> </entry> <entry><title>[BOJ] 19718 King's Inspection</title><link href="https://www.singun11.wtf/posts/boj-19718/" rel="alternate" type="text/html" title="[BOJ] 19718 King's Inspection" /><published>2022-01-08T18:33:10+09:00</published> <updated>2022-01-08T18:33:10+09:00</updated> <id>https://www.singun11.wtf/posts/boj-19718/</id> <content src="https://www.singun11.wtf/posts/boj-19718/" /> <author> <name>shinkeonkim</name> </author> <category term="BOJ" /> <summary> 문제 요약 및 풀이 19718번: King’s Inspection 문제 상황을 요약하면 다음과 같다. 자연수 a,b,c 가 주어진다. 주어진 자연수 a, b, c중 2개를 골라 1씩 더할 수 있다. 이때, 모든 숫자를 같게 만들기 위한 최소 덧셈 횟수는 몇번인가? 풀이 코드 문제를 보자마자, 바로 드는 생각은 그때 그때 가장 작은 숫자 2개를 골라 1씩 더해주면서 카운팅하면 되지 않을까? 였다. 그래서 바로 아래와 같은 풀이를 작성했다. l = [int(input()) for i in range(3)] cnt = 0 while not l[0] == l[1] == l[2]: l.sort() l[0] += 1 l[1] += 1 cnt += 1 print(cnt) (브... </summary> </entry> <entry><title>[TIL] Window size에 따라 속도가 달라지는 CSS Animation 바로잡기</title><link href="https://www.singun11.wtf/posts/TIL-responsive-animation/" rel="alternate" type="text/html" title="[TIL] Window size에 따라 속도가 달라지는 CSS Animation 바로잡기" /><published>2021-12-19T18:38:16+09:00</published> <updated>2021-12-19T18:38:16+09:00</updated> <id>https://www.singun11.wtf/posts/TIL-responsive-animation/</id> <content src="https://www.singun11.wtf/posts/TIL-responsive-animation/" /> <author> <name>shinkeonkim</name> </author> <category term="TIL" /> <summary> 문제 상황 새벽에 어쩌다 떠오른 아이디어로 짧고 굵게 토이 프로젝트를 진행해보고 있다. Github repo Site page 바로 Can you catch “Circle” 이다. 뭐.. 줄이자면 CCC 일 것 같다. ㅋㅋㅋ 굉장히 단순한 웹 페이지 프로젝트이다. 단순히 화면에 있는 “Circle”을 잡으면 된다. 아직은 좌우로 움직이는 기믹밖에 없지만, 점차 추가해보려고 한다. 아무튼, 방금 언급한 “좌우로 움직히는 기믹”을 만들던 중, 아래와 같은 코드에서 한가지 생각지도 못했던 이슈가 발생했다. .move-left-to-right { animation: just-left-to-right 20s linear infinite; -webkit-animation-name: ju... </summary> </entry> <entry><title>[TIL] Django Alphanumeric Random String 생성하기</title><link href="https://www.singun11.wtf/posts/TIL-django-get_random_string/" rel="alternate" type="text/html" title="[TIL] Django Alphanumeric Random String 생성하기" /><published>2021-12-14T21:40:53+09:00</published> <updated>2021-12-14T21:40:53+09:00</updated> <id>https://www.singun11.wtf/posts/TIL-django-get_random_string/</id> <content src="https://www.singun11.wtf/posts/TIL-django-get_random_string/" /> <author> <name>shinkeonkim</name> </author> <category term="BOJ" /> <summary> Django에서 랜덤 문자열 쉽게 만들어내기 웹 서비스를 구성하다보면, 종종 랜덤 문자열을 뽑아내야 하는 경우가 있다. 이번에는 사용자가 직접 가입하지 않고 초대를 받아 가입하는 서비스를 구성하던 중에, 임의적으로 유저의 username을 설정해야 했다. 이전에는 random module을 이용해 작성했지만, 이번에는 Django에서 지원하는 모듈로 작성하고자 찾아봤다. get_random_string 바로, get_random_string이다. 아래와 같이 import 하면 된다. from django.utils.crypto import get_random_string 사용방법 length를 무조건 넘겨주어야 한다. get_random_string(length=10) ... </summary> </entry> </feed>
